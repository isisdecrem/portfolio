name: PR Description Check

on:
  pull_request:
    types: [opened, edited, synchronize]

jobs:
  check-pr-description:
    runs-on: ubuntu-latest
    steps:
      - name: Check PR Description
        uses: actions/github-script@v7
        with:
          script: |
            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
            });
            
            const description = pr.body || '';
            console.log('PR Description:', description);
            
            const errors = [];
            
            // Check for Linear Ticket format
            const linearTicketRegex = /Linear Ticket: PER-\d+/;
            if (!linearTicketRegex.test(description)) {
              errors.push('❌ Missing "Linear Ticket: PER-XXXX" format');
            } else {
              console.log('✅ Linear ticket format found');
            }
            
            // Check for Changes Made section with bullet points
            const changesMadeRegex = /Changes Made[\s\S]*?(?=\n\n|\n#|$)/i;
            const changesMadeMatch = description.match(changesMadeRegex);
            if (!changesMadeMatch) {
              errors.push('❌ Missing "Changes Made" section');
            } else {
              const changesSection = changesMadeMatch[0];
              const bulletRegex = /^\s*[-*+]\s+.+$/m;
              if (!bulletRegex.test(changesSection)) {
                errors.push('❌ "Changes Made" section must contain at least one bullet point');
              } else {
                console.log('✅ Changes Made section with bullets found');
              }
            }
            
            // Check for Testing Done section with bullet points
            const testingDoneRegex = /Testing Done[\s\S]*?(?=\n\n|\n#|$)/i;
            const testingDoneMatch = description.match(testingDoneRegex);
            if (!testingDoneMatch) {
              errors.push('❌ Missing "Testing Done" section');
            } else {
              const testingSection = testingDoneMatch[0];
              const bulletRegex = /^\s*[-*+]\s+.+$/m;
              if (!bulletRegex.test(testingSection)) {
                errors.push('❌ "Testing Done" section must contain at least one bullet point');
              } else {
                console.log('✅ Testing Done section with bullets found');
              }
            }
            
            // Report results
            if (errors.length > 0) {
              const errorMessage = `PR Description validation failed:\n\n${errors.join('\n')}\n\nRequired format:\n\n\`\`\`\nLinear Ticket: PER-XXXX\n\n## Changes Made\n- Description of change 1\n- Description of change 2\n\n## Testing Done\n- Test description 1\n- Test description 2\n\`\`\``;
              
              core.setFailed(errorMessage);
              
              // Add a comment to the PR
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: errorMessage
              });
            } else {
              console.log('✅ All PR description requirements met!');
            }
